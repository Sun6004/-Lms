<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="kr.or.hku.common.mapper.CommonMapper">
 	
 	<select id="getAllCommonData" resultType="commonVO">
 		/*kr.or.hku.common.mapper.CommonMapper.getAllCommonData*/
 		select * from com_code
 	</select>
 	
 	<!-- 학과이름 포함한 나의 정보 가져오기 -->
 	<select id="myAllInfo" parameterType="String" resultType="studentVO">
 	/*kr.or.hku.common.mapper.CommonMapper.myAllInfo*/
		SELECT 
		      a.std_no
		    , a.dept_cd
		    , b.dept_nm
		    , a.std_nm
		    , (select sum(crs_earned_crd)from course_regist z, lecture_aply x, subject y 
		        where z.std_no = #{stdNo}
		        and z.lecap_no = x.lecap_no 
		        and y.sub_no = x.sub_no
		        and (y.crs_classf_cd like 'MR' or y.crs_classf_cd like 'MS')) as std_mjr_crd
		    , (select sum(crs_earned_crd) from course_regist z, lecture_aply x, subject y
		        where std_no = #{stdNo} 
		        and z.lecap_no = x.lecap_no 
		        and y.sub_no = x.sub_no
		        and (y.crs_classf_cd like 'ER' or y.crs_classf_cd like 'ES')) as std_ctrl_crd
		    , (select sum(crs_earned_crd) from course_regist where std_no = #{stdNo}) as crd_sum
		    , a.std_mtcltn_yr
		    , a.std_stts_cd
		    , c.com_cd_nm AS std_stts_nm
		    , a.std_telno
		    , a.std_sex_cd
		    , a.std_zip
		    , a.std_addr
		    , a.std_daddr
		    , a.std_mail
		    , a.std_brdt
		    , a.std_rrno
		    , a.bank_cd
		    , a. std_profile_path
		    ,(to_number(to_char(sysdate, 'YYYY')) - to_number(to_char(a.std_mtcltn_yr)) + 1) AS grade
		    , d.flct_no
		    , d.flct_nm
		    , TO_CHAR(sysdate, 'YYYY') AS current_year
		    , CASE
		          WHEN TO_NUMBER(TO_CHAR(sysdate, 'MM')) BETWEEN 2 AND 6 THEN 1
		          WHEN TO_NUMBER(TO_CHAR(sysdate, 'MM')) BETWEEN 7 AND 12 THEN 2
		          ELSE 0
		      END AS current_sem
		FROM student a, department b, com_code c, facility d
		WHERE a.dept_cd = b.dept_cd
		AND c.com_cd = a.std_stts_cd
		AND d.flct_no = b.flct_no
		AND a.std_no = #{stdNo}
 	</select>
 	
 	<!-- 해당 시설의 층 가져오기 -->
 	<select id="floorListFlct" parameterType="String" resultType="flctVO">
 	/*kr.or.hku.common.mapper.CommonMapper.floorListFlct*/
		SELECT 
			  a.flct_nm
			, a.flct_no
			, b.floor 
		FROM facility a, facility_floor b
		WHERE a.flct_no = b.flct_no
		AND a.flct_no = #{flctNo}
 	</select>
 	
 	<!-- 알람 등록하기 -->
 	<insert id="alarmInsert" parameterType="alarmVO">
 	/*kr.or.hku.common.mapper.CommonMapper.alarmInsert*/
 		INSERT INTO alarm
 		VALUES(seq_alarm.nextval, #{receiveUserNo}, #{alarmType}, #{alarmTtl}, sysdate, #{alarmPathNo},#{sendUserNo}, #{sendProfile})
 	</insert>
 	
 	<!-- 나의 알람 리스트 가져오기 -->
 	<select id="getAlarmList" parameterType="string" resultType="alarmVO">
 	/*kr.or.hku.common.mapper.CommonMapper.getAlarmList*/
	 	SELECT 
	 		 a.alarm_no
	 	   , a.receive_user_no
	 	   , a.alarm_type
	 	   , a.alarm_ttl
	 	   , a.alarm_reg_dt
	 	   , a.alarm_path_no
	 	   , a.send_user_no
	 	   , a.send_profile
		   , COUNT(*) OVER() AS total_cnt
		FROM alarm a
		WHERE a.receive_user_no = #{username}
		ORDER BY a.alarm_no DESC
 	</select>
 	
 	<!-- 알람 읽음처리 -->
 	<delete id="alarmDelete" parameterType="int">
 	/*kr.or.hku.common.mapper.CommonMapper.alarmDelete*/
 		DELETE FROM alarm
 		WHERE alarm_no = #{alarmNo}
 	</delete>
 	
 	<!-- 교수 대쉬보드 정보가져오기 -->
 	<select id="myProInfo" parameterType="string" resultType="professorVO">
 	/*kr.or.hku.common.mapper.CommonMapper.myProInfo*/
 		SELECT a.pro_no, a.dept_cd, a.pro_nm, b.dept_nm, c.col_nm
		FROM professor a, department b, college c
		WHERE a.dept_cd = b.dept_cd
		AND c.col_cd = b.col_cd
		AND a.pro_no = #{proNo}
 	</select>
 </mapper>