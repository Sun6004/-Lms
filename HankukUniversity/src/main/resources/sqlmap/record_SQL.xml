<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="kr.or.hku.student.mapper.RecordMapper">
 	<!-- 현재 로그인한 학생의 정보 조회 -->
 	<select id="recordInfo" parameterType="String" resultType="studentVO">
 	<!--kr.or.hku.mapper.student.RecordMapper.recordInfo -->
		SELECT 
		      a.std_no
		    , a.dept_cd
		    , b.dept_nm
		    , a.std_nm
		    , (select sum(crs_earned_crd)from course_regist z, lecture_aply x, subject y 
		        where z.std_no = '20220004' 
		        and z.lecap_no = x.lecap_no 
		        and y.sub_no = x.sub_no
		        and (y.crs_classf_cd like 'MR' or y.crs_classf_cd like 'MS')) as std_mjr_crd
		    , (select sum(crs_earned_crd) from course_regist z, lecture_aply x, subject y
		        where std_no = '20220004' 
		        and z.lecap_no = x.lecap_no 
		        and y.sub_no = x.sub_no
		        and (y.crs_classf_cd like 'ER' or y.crs_classf_cd like 'ES')) as std_ctrl_crd
		    , (select sum(crs_earned_crd) from course_regist where std_no = #{stdNo}) as crd_sum
		    , a.std_mtcltn_yr
		    , a.std_stts_cd
		    , c.com_cd_nm AS std_stts_nm
		    , a.std_telno
		    , a.std_sex_cd
		    , a.std_zip
		    , a.std_addr
		    , a.std_daddr
		    , a.std_mail
		    , a.std_brdt
		    , a.std_rrno
		    , a.bank_cd
		    , a. std_profile_path
		    ,(to_number(to_char(sysdate, 'YYYY')) - to_number(to_char(a.std_mtcltn_yr)) + 1) AS grade
		    , d.flct_no
		    , d.flct_nm
		    , TO_CHAR(sysdate, 'YYYY') AS current_year
		    , CASE
		          WHEN TO_NUMBER(TO_CHAR(sysdate, 'MM')) BETWEEN 2 AND 6 THEN 1
		          WHEN TO_NUMBER(TO_CHAR(sysdate, 'MM')) BETWEEN 7 AND 12 THEN 2
		          ELSE 0
		      END AS current_sem
		FROM student a, department b, com_code c, facility d
		WHERE a.dept_cd = b.dept_cd
		AND c.com_cd = a.std_stts_cd
		AND d.flct_no = b.flct_no
		AND a.std_no = #{stdNo}
 	</select>
 	
 	<!--휴학/복학/자퇴 신청 -->
 	<insert id="insertAcademic" parameterType="recordVo">
 		insert into academic_change (
			    change_no,std_no,change_type_cd,change_rsn,change_aply_dt,change_start_yr,
			    change_start_sem,change_end_yr,change_end_sem,aprv_stts_cd
		    ) values(
	    		seq_academic_change.nextval, #{stdNo}, #{changeTypeCd}, #{changeRsn}, sysdate, 
	    		#{changeStartYr}, #{changeStartSem}, #{changeEndYr}, #{changeEndSem}
	    		  , 'wait')
 	</insert>

 	<!--졸업 유예 신청 -->
 	<insert id="gradutePostpone" parameterType="recordVo">
 		insert into academic_change (
			    change_no,std_no,change_type_cd,change_rsn,change_aply_dt, change_end_yr,change_end_sem,aprv_stts_cd
		    ) values(
	    		seq_academic_change.nextval, #{stdNo}, 'change05', #{changeRsn}, sysdate,
	    		 #{changeEndYr}, #{changeEndSem} , 'wait')
 	</insert>

 	<!--졸업 신청 -->
 	<insert id="graduteApply" parameterType="recordVo">
 		insert into academic_change (
			    change_no,std_no,change_type_cd,change_rsn,change_aply_dt, aprv_stts_cd
		    ) values(
	    		seq_academic_change.nextval, #{stdNo}, 'change03', #{changeRsn}, sysdate, 'wait')
 	</insert>
 	
 	<!-- 신청 삭제 -->
 	<delete id="cancelRecord" parameterType="int">
 		delete from academic_change
		where change_no = #{changeNo}
 	</delete>
 	
 	<!--학적변동 신청내역 조회 -->
 	<select id="recordList" parameterType="String" resultType="recordVo">
 		select 
		    a.change_no, a.std_no, a.change_type_cd, b.com_cd_nm as comcdnm1, a.change_rsn, a.change_aply_dt,
		    a.change_start_yr, a.change_start_sem, a.change_end_yr, a.change_end_sem, a.aprv_stts_cd, c.com_cd_nm as comcdnm2, a.change_rjct_rsn
		from academic_change a 
			join com_code b on a.change_type_cd = b.com_cd 
			join com_code c on a.aprv_stts_cd = c.com_cd 
		where a.std_no = #{stdNo} and a.aprv_stts_cd = 'wait'
		order by
	    a.change_no DESC
 	</select>
 	
 	<!-- 학적 변동 기록 조회 -->
 	<select id="recordChanged" resultType="recordVo" parameterType="string">
 		select a.change_no, a.std_no, a.change_type_cd, b.com_cd_nm comcdnm1, a.change_rsn, a.change_aply_dt, a.change_start_yr,
		        a.change_start_sem, a.change_end_yr, a.change_end_sem, a.aprv_stts_cd, c.com_cd_nm comcdnm2, a.change_rjct_rsn
		from academic_change a
			join com_code b on a.change_type_cd = b.com_cd
			join com_code c on a.aprv_stts_cd = c.com_cd
		where a.std_no = #{stdNo} and (a.aprv_stts_cd = 'appv' or a.aprv_stts_cd = 'rej')
		order by
	    a.change_no DESC
 	</select>
 </mapper>